name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend Build and Test
  frontend:
    name: Frontend Build & Lint
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      
      # Cache node_modules for faster installs
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      # Cache Vite build cache for faster builds
      - name: Cache Vite
        uses: actions/cache@v4
        with:
          path: |
            frontend/node_modules/.vite
            frontend/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('frontend/package-lock.json') }}-${{ hashFiles('frontend/src/**') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('frontend/package-lock.json') }}-
            ${{ runner.os }}-vite-
      
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Run linter
        run: npm run lint
        continue-on-error: true
      
      - name: Type check
        run: npm run typecheck
        continue-on-error: true
      
      - name: Build project
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 7
  
  # Backend Build and Test
  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      # Cache node_modules for faster installs
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules-backend
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-node-modules-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-modules-
      
      - name: Install dependencies
        if: steps.cache-node-modules-backend.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Build project
        run: npm run build || echo "No build script found"
        continue-on-error: true
